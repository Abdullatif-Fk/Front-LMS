[{"/home/hussein/Desktop/LMS/Front-LMS/front/src/index.js":"1","/home/hussein/Desktop/LMS/Front-LMS/front/src/App.js":"2","/home/hussein/Desktop/LMS/Front-LMS/front/src/reportWebVitals.js":"3","/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/Search.js":"4","/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/style.js":"5","/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/ModalEdit.js":"6"},{"size":470,"mtime":1609182287045,"results":"7","hashOfConfig":"8"},{"size":1166,"mtime":1609110094746,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608857480452,"results":"10","hashOfConfig":"8"},{"size":5785,"mtime":1609200109963,"results":"11","hashOfConfig":"8"},{"size":396,"mtime":1609231936118,"results":"12","hashOfConfig":"8"},{"size":4743,"mtime":1609200141996,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tvn7xy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/hussein/Desktop/LMS/Front-LMS/front/src/index.js",[],["30","31"],"/home/hussein/Desktop/LMS/Front-LMS/front/src/App.js",["32","33","34"],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SplitPane from \"react-split-pane\";\n\nimport Search from \"./components/Student_Search/Search\";\nfunction App() {\n  return (\n    <div className=\"App container mt-2\">\n      <header className=\"App-header\">\n        <div>\n          <ul style={{ listStyleType: \"none\" }}>\n            <li>\n              <a href=\"/\">Students</a>\n            </li>\n            <li>\n              <a href=\"/submission\">Submission</a>\n            </li>\n            <li>\n              <a href=\"/attendance\">Attendance</a>\n            </li>\n            <li>\n              <a href=\"/admincontroller\">Admin Controller</a>\n            </li>\n          </ul>\n        </div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Search />\n            </Route>\n            <Route path=\"/submission\"></Route>\n            <Route path=\"/attendance\">kjn</Route>\n            <Route path=\"/admincontroller\">kjn</Route>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/hussein/Desktop/LMS/Front-LMS/front/src/reportWebVitals.js",[],"/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/Search.js",["35","36","37","38","39","40","41","42","43","44","45"],"import React, { useEffect, useState, Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { Wrap } from \"./style.js\";\nimport ModalEdit from \"./ModalEdit\";\nimport { ListGroup, Row, Col, Spinner, Modal, Button } from \"react-bootstrap\";\nfunction Search() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [id, setId] = useState(\"falsee\");\n  const [arr, setArray2] = useState(0);\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(0);\n  const [Pagination, setPagination] = useState({\n    data: students.map((value, index) => ({\n      id: value.id,\n      class_id: value.class_id,\n      section_id: value.section_id,\n      student_name: value.student_name,\n    })),\n    offset: 0,\n    numberPerPage: 1,\n    pageCount: 0,\n    currentData: [],\n  });\n\n  useEffect(() => {\n    try {\n      fetch(\"http://localhost:8000/api/Fetch_Students\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({}),\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          if (json.status != 400) {\n            setPagination({\n              data: json.message.data.map((value, index) => ({\n                id: value.id,\n                class_id: value.class_id,\n                section_id: value.section_id,\n                student_name: value.student_name,\n              })),\n              offset: 0,\n              numberPerPage: 1,\n              pageCount: 0,\n              currentData: [],\n            });\n          } else alert(json.message);\n          setLoading(1);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [arr]);\n\n  useEffect(() => {\n    setPagination((prevState) => ({\n      ...prevState,\n      pageCount: prevState.data.length / prevState.numberPerPage,\n      currentData: prevState.data.slice(\n        Pagination.offset,\n        Pagination.offset + Pagination.numberPerPage\n      ),\n    }));\n  }, [, Pagination.numberPerPage, Pagination.offset, Pagination.data]);\n\n  const handlePageClick = (event) => {\n    const selected = event.selected;\n    const offset = selected * Pagination.numberPerPage;\n    setPagination({ ...Pagination, offset });\n  };\n\n  const del = (id) => {\n    try {\n      if (window.confirm(\"Delete the item?\"))\n        fetch(`http://localhost:8000/api/Delete_Student/${id}`, {\n          method: \"delete\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        })\n          .then((res) => res.json())\n          .then((json) => {\n            console.log(json);\n            alert(json.message);\n            if (json.status == 400) {\n              // if (json.redirect == true) {\n              //   window.location.replace(json.location);\n              // }\n            } else {\n              const newList = Pagination.data.filter((item) => item.id !== id);\n\n              setPagination({\n                data: newList,\n                offset: 0,\n                numberPerPage: 1,\n                pageCount: 0,\n                currentData: [],\n              });\n            }\n          });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (loading == 0) {\n    return (\n      <div style={{ position: \"absolute\", left: \"50%\" }}>\n        <div\n          style={{\n            position: \"relative\",\n            left: \"-50%\",\n          }}\n        >\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      </div>\n    );\n  } else {\n    if (Pagination.data.length == 0)\n      return (\n        <div style={{ position: \"absolute\", left: \"50%\" }}>\n          <div\n            style={{\n              position: \"relative\",\n              left: \"-50%\",\n            }}\n          >\n            Couldn't find any student...\n          </div>\n        </div>\n      );\n    else\n      return (\n        <Wrap>\n          <ListGroup.Item>\n            {Pagination.currentData &&\n              Pagination.data.map((item, index) => (\n                <Row key={item.id}>\n                  <Col sm={3}>Student Name: {item.student_name}</Col>{\" \"}\n                  <Col sm>Class: {item.class_id}</Col>\n                  <Col sm>Section: {item.section_id}</Col>\n                  <Col sm>\n                    <button\n                      className=\"btn btn-warning\"\n                      onClick={() => {\n                        setId(item.id);\n                        handleShow();\n                      }}\n                    >\n                      Edit\n                    </button>\n                  </Col>\n                  <Col sm>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => {\n                        del(item.id);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </Col>\n                </Row>\n              ))}\n          </ListGroup.Item>\n\n          <ReactPaginate\n            previousLabel={\" ← Previous\"}\n            nextLabel={\"Next → \"}\n            pageCount={Pagination.pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination\"}\n            activeClassName={\"active\"}\n          />\n\n          <ModalEdit\n            show={show}\n            handleClose={handleClose}\n            id={id}\n            arr={arr}\n            setArray2={setArray2}\n          />\n        </Wrap>\n      );\n  }\n}\nexport default Search;\n","/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/style.js",[],"/home/hussein/Desktop/LMS/Front-LMS/front/src/components/Student_Search/ModalEdit.js",["46","47","48"],"import { Modal, Button, Form } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./ModalStyle.scss\";\nfunction ModalEdit({ show, handleClose, id, arr, setArray2 }) {\n  const [student_info, SetStudent_info] = useState([]);\n  function handleInputChange(e) {\n    const { value, name } = e.target;\n    if (name == \"Image\") {\n      SetStudent_info({\n        ...student_info,\n        [name]: e.target.files[0],\n      });\n    } else {\n      SetStudent_info({\n        ...student_info,\n        [name]: value,\n      });\n    }\n  }\n  function submit(e) {\n    console.log(1111111111111111111111);\n    fetch(`http://localhost:8000/api/Edit_Student/${id}`, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ student_info: student_info }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setArray2(arr + 1);\n        handleClose();\n      });\n  }\n  useEffect(() => {\n    try {\n      if (id != \"falsee\")\n        fetch(`http://localhost:8000/api/Fetch_Student_By_Id/${id}`, {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-type\": \"application/json\",\n          },\n        })\n          .then((res) => res.json())\n          .then((json) => {\n            SetStudent_info(json.message);\n            console.log(student_info);\n          });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [show]);\n  return (\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal title</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form className=\"ModalStyle\">\n          <Form.Group controlId=\"formBasicfirstname\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              name=\"first_name\"\n              defaultValue={student_info.first_name}\n              onChange={handleInputChange}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasiclastname\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your last name\"\n              name=\"last_name\"\n              defaultValue={student_info.last_name}\n              onChange={handleInputChange}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              defaultValue={student_info.email}\n              onChange={handleInputChange}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Phone nb</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your phone\"\n              name=\"phone_number\"\n              defaultValue={student_info.phone_number}\n              onChange={handleInputChange}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicsectionname\">\n            <Form.Label>Section Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Section name\"\n              name=\"section_name\"\n              defaultValue={student_info.section_name}\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Class Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Class name\"\n              name=\"class_name\"\n              defaultValue={student_info.class_name}\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n          {/* <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.File type=\"file\" name=\"Image\" onChange={handleInputChange} />\n          </Form.Group> */}\n          <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n            Submit\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={submit}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\nexport default ModalEdit;\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":4,"column":50,"nodeType":"55","messageId":"56","endLine":4,"endColumn":54},{"ruleId":"53","severity":1,"message":"58","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":46},{"ruleId":"53","severity":1,"message":"60","line":1,"column":48,"nodeType":"55","messageId":"56","endLine":1,"endColumn":52},{"ruleId":"53","severity":1,"message":"61","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":6,"column":40,"nodeType":"55","messageId":"56","endLine":6,"endColumn":45},{"ruleId":"53","severity":1,"message":"63","line":6,"column":47,"nodeType":"55","messageId":"56","endLine":6,"endColumn":53},{"ruleId":"53","severity":1,"message":"64","line":13,"column":20,"nodeType":"55","messageId":"56","endLine":13,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":40,"column":27,"nodeType":"67","messageId":"68","endLine":40,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":70,"column":6,"nodeType":"71","messageId":"72","endLine":70,"endColumn":70},{"ruleId":"65","severity":1,"message":"73","line":92,"column":29,"nodeType":"67","messageId":"68","endLine":92,"endColumn":31},{"ruleId":"65","severity":1,"message":"73","line":113,"column":15,"nodeType":"67","messageId":"68","endLine":113,"endColumn":17},{"ruleId":"65","severity":1,"message":"73","line":129,"column":32,"nodeType":"67","messageId":"68","endLine":129,"endColumn":34},{"ruleId":"65","severity":1,"message":"73","line":8,"column":14,"nodeType":"67","messageId":"68","endLine":8,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":38,"column":14,"nodeType":"67","messageId":"68","endLine":38,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":54,"column":6,"nodeType":"71","endLine":54,"endColumn":12,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'SplitPane' is defined but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'ReactDOM' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'setStudents' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'student_info'. Either include them or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [id, show, student_info]",{"range":"82","text":"83"},[1495,1501],"[id, show, student_info]"]